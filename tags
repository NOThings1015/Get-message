!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR	src/Makefile	/^AR=ar$/;"	m
App_name1	test_main/Makefile	/^App_name1=test_server$/;"	m
App_name2	test_main/Makefile	/^App_name2=test_client$/;"	m
CC	src/Makefile	/^CC=gcc$/;"	m
DS18B20_H_	include/ds18b20.h	15;"	d
DS18B20_H_	src/ds18b20.h	15;"	d
Inc_path	src/Makefile	/^Inc_path=`pwd`\/..\/include$/;"	m
Inc_path	test_main/Makefile	/^Inc_path=${shell pwd}\/..\/include$/;"	m
LOCA_TIME_H	include/loca_time.h	15;"	d
LOCA_TIME_H	src/loca_time.h	15;"	d
Lib_name	src/Makefile	/^Lib_name=test$/;"	m
Lib_name	test_main/Makefile	/^Lib_name=test$/;"	m
Lib_path	src/Makefile	/^Lib_path=`pwd`\/..\/lib\/$/;"	m
Lib_path	test_main/Makefile	/^Lib_path=${shell pwd}\/..\/lib\/$/;"	m
Max_event	test_main/server.c	32;"	d	file:
Print_Client_Usage	src/socket.c	/^void Print_Client_Usage(char *progname)$/;"	f
Print_Client_Usage	test_main/client.c	/^void Print_Client_Usage(char *progname)$/;"	f
Print_Server_Usage	src/socket.c	/^void Print_Server_Usage(char *progname)$/;"	f
SEND_H_	include/send.h	15;"	d
SEND_H_	src/send.h	15;"	d
SOCKET_H_	include/socket.h	15;"	d
SOCKET_H_	src/socket.h	15;"	d
SQLITE_H_	include/sqlite.h	16;"	d
SQLITE_H_	src/sqlite.h	16;"	d
TIME_I	test_main/client.c	/^		int						TIME_I;				\/\/采样时间间隔(单位秒)$/;"	l
USAGE_H	include/usage.h	14;"	d
USAGE_H	src/usage.h	14;"	d
buf	src/ds18b20.c	/^	char				buf[buf_size];$/;"	l
buf	src/sqlite.c	/^	char			buf[256] = "";$/;"	l
buf	test_main/client.c	/^		char					buf[1024];$/;"	l
buf	test_main/server.c	/^	char					buf[200];$/;"	l
buf_size	src/ds18b20.c	25;"	d	file:
buffer	src/send.c	/^		char buffer[57];$/;"	l
ch	src/usage.c	/^	int 			ch=0;$/;"	l
ch	test_main/client.c	/^		int						ch = 0;$/;"	l
ch	test_main/server.c	/^	int           		    ch=0;$/;"	l
checkTableSQL	src/sqlite.c	/^		const char *checkTableSQL = $/;"	l
cols	src/sqlite.c	/^	int 			rows, cols, rc;$/;"	l
conn_flag	test_main/client.c	/^		int    					conn_flag = 0;$/;"	l
connfd	src/socket.c	/^	int                     connfd;$/;"	l
connfd	test_main/client.c	/^		int             		connfd = -1;$/;"	l
connfd	test_main/server.c	/^	int						connfd=-1;$/;"	l
countSQL	src/sqlite.c	/^		const char *countSQL = "SELECT COUNT(*) FROM TempData;";$/;"	l
createTableSQL	src/sqlite.c	/^    const char *createTableSQL = "CREATE TABLE IF NOT EXISTS TempData ("$/;"	l
create_table	src/sqlite.c	/^int create_table(char *sqlite_path) $/;"	f
current_pos	src/send.c	/^				long current_pos = ftell(fp);$/;"	l
db	src/sqlite.c	/^		sqlite3 	*db;$/;"	l
db	src/sqlite.c	/^		sqlite3 *db = NULL;$/;"	l
db	src/sqlite.c	/^		sqlite3* db = NULL;$/;"	l
db	src/sqlite.c	/^	sqlite3 		*db;$/;"	l
db	src/sqlite.c	/^	sqlite3 	*db;$/;"	l
db	src/sqlite.c	/^    sqlite3 *db;$/;"	l
db	test_main/client.c	/^		sqlite3         		*db;$/;"	l
deleteSQL	src/sqlite.c	/^	const char *deleteSQL = "DELETE FROM TempData;";$/;"	l
delete_1st_row	src/sqlite.c	/^int delete_1st_row(char* db_path, char* table_name) $/;"	f
device_path	src/ds18b20.c	/^	char				device_path[200] = ""; \/\/存放数据所在文件夹$/;"	l
direntp	src/ds18b20.c	/^	struct dirent		*direntp = NULL;		$/;"	l
dirp	src/ds18b20.c	/^	DIR					*dirp = NULL;$/;"	l
end	test_main/client.c	/^		time_t					end = 0;$/;"	l
epollfd	test_main/server.c	/^	int						epollfd;			\/\/epoll对象$/;"	l
errMsg	src/sqlite.c	/^		char 		*errMsg = NULL;$/;"	l
errMsg	src/sqlite.c	/^	char 			*errMsg = NULL;$/;"	l
errMsg	src/sqlite.c	/^	char 		*errMsg = NULL;$/;"	l
errMsg	src/sqlite.c	/^    char *errMsg = NULL;$/;"	l
errmsg	src/sqlite.c	/^	char 			*errmsg = NULL;$/;"	l
error_message	src/sqlite.c	/^		char* error_message = NULL;$/;"	l
event	test_main/server.c	/^	struct epoll_event		event;				\/\/events,data$/;"	l
event_array	test_main/server.c	/^	struct epoll_event		event_array[Max_event];$/;"	l
events	test_main/server.c	/^	int						events;$/;"	l
fd	src/ds18b20.c	/^	int					fd = -1;$/;"	l
file_pos	src/send.c	/^				ftruncate(fileno(fp), file_pos);$/;"	l
file_pos	src/send.c	/^		long file_pos = 0;$/;"	l
found	src/ds18b20.c	/^	int					found = 0;$/;"	l
fp	src/send.c	/^		FILE *fp = fopen(output_file, "r+");$/;"	l
fp	src/sqlite.c	/^		FILE *fp = fopen(output_file, "w");$/;"	l
generate_sensor_message	src/ds18b20.c	/^char *generate_sensor_message(void)$/;"	f
get_ds18b20	src/ds18b20.c	/^int  get_ds18b20(char *serial_number, int buffer_size, float *temp)$/;"	f
get_time	src/loca_time.c	/^int get_time(char *buffer, int buf_size) $/;"	f
handle_sigpipe	test_main/client.c	/^void handle_sigpipe(int sig) $/;"	f
i	src/send.c	/^		int      i = 0;$/;"	l
i	test_main/server.c	/^	int 					i=0;$/;"	l
insertSQL	src/sqlite.c	/^	const char *insertSQL = "INSERT INTO TempData (data) VALUES (?);";$/;"	l
is_database_empty	src/sqlite.c	/^int is_database_empty(const char *sqlite_path) $/;"	f
len	src/ds18b20.c	/^		int len = snprintf(message, mes_size, "%s: %s, temperature: %.3f\\n", time, serial_number, temp);$/;"	l
line	src/sqlite.c	/^		int 		line = 0;$/;"	l
listenfd	src/socket.c	/^	int                         listenfd;$/;"	l
listenfd	test_main/server.c	/^	int						listenfd;$/;"	l
main	test_main/client.c	/^int main(int argc, char **argv)$/;"	f
main	test_main/server.c	/^int main(int argc, char **argv)$/;"	f
mes_size	src/ds18b20.c	/^		int			mes_size = 128;$/;"	l
message	src/ds18b20.c	/^		char 		*message = NULL;      \/\/ 返回的报文$/;"	l
on	src/socket.c	/^	int                         on=1;$/;"	l
opts	src/usage.c	/^	struct option	opts[]={$/;"	l
opts	test_main/client.c	/^		struct option   opts[]={$/;"	l
opts	test_main/server.c	/^	struct option   opts[]={$/;"	l
output_file	test_main/client.c	/^		char					output_file[128]="..\/tmp\/output.txt";$/;"	l
port	src/usage.c	/^	int 			port=0;$/;"	l
print_usage	src/usage.c	/^void print_usage(char *progname)$/;"	f
progname	test_main/server.c	/^	char					*progname=NULL;$/;"	l
ptr	src/ds18b20.c	/^	char				*ptr;$/;"	l
rawtime	src/loca_time.c	/^		time_t rawtime;$/;"	l
rc	src/sqlite.c	/^		int 		rc = -1;$/;"	l
rc	src/sqlite.c	/^		int rc, result = -1;$/;"	l
rc	src/sqlite.c	/^		int rc;$/;"	l
rc	src/sqlite.c	/^	int 			rc=-1;$/;"	l
rc	src/sqlite.c	/^	int 			rows, cols, rc;$/;"	l
rc	src/sqlite.c	/^	int 		rc = -1;$/;"	l
rc	src/sqlite.c	/^    int rc;$/;"	l
read_bytes	src/send.c	/^				size_t read_bytes = fread(buffer, 1, sizeof(buffer), fp);$/;"	l
read_flage	test_main/client.c	/^		int 					read_flage = 0;$/;"	l
result	src/sqlite.c	/^		int rc, result = -1;$/;"	l
result	src/sqlite.c	/^	char 			**result;$/;"	l
row_count	src/sqlite.c	/^		int row_count = 0;$/;"	l
rows	src/sqlite.c	/^	int 			rows, cols, rc;$/;"	l
rv	src/send.c	/^		int rv = 0 ;$/;"	l
rv	src/socket.c	/^	int                         rv=0;$/;"	l
rv	test_main/client.c	/^		int						rv = -1;$/;"	l
rv	test_main/server.c	/^	int						rv=-5;$/;"	l
selectSQL	src/sqlite.c	/^		const char *selectSQL = "SELECT data FROM TempData ORDER BY timestamp ASC;";$/;"	l
selectSQL	src/sqlite.c	/^	const char *selectSQL = $/;"	l
send_all	src/send.c	/^int send_all(int sockfd, const char *data, int length)$/;"	f
send_count	src/send.c	/^		int send_count = 0;$/;"	l
send_data_from_file	src/send.c	/^int send_data_from_file(char *output_file, int connfd)$/;"	f
send_not_empty	src/send.c	/^int send_not_empty(char *sqlite_path, char *output_file, int connfd)$/;"	f
serial_number	src/ds18b20.c	/^		char 		serial_number[32];    \/\/ 设备号缓冲区$/;"	l
serial_number	test_main/client.c	/^		char					serial_number[32] = "";$/;"	l
serv_addr	src/socket.c	/^	struct sockaddr_in      serv_addr;$/;"	l
serv_addr	test_main/client.c	/^		struct sockaddr_in		serv_addr;$/;"	l
serv_port	test_main/server.c	/^	int            		    serv_port=0;$/;"	l
servaddr	src/socket.c	/^	struct sockaddr_in          servaddr;$/;"	l
server_ip	test_main/client.c	/^		char					*server_ip = NULL;$/;"	l
server_port	test_main/client.c	/^		int             		server_port = 0;$/;"	l
socket_client_init	src/socket.c	/^int socket_client_init(const char *server_ip, int server_port)$/;"	f
socket_server_init	src/socket.c	/^int socket_server_init(char *listen_ip,int listen_port)$/;"	f
sql_query	src/sqlite.c	/^		char sql_query[256];	\/\/ 构建 DELETE 语句$/;"	l
sqlite_clear	src/sqlite.c	/^int	sqlite_clear(char *sqlite_path)$/;"	f
sqlite_path	test_main/client.c	/^		char            		sqlite_path[128]="..\/sqlite3\/Temp.db";$/;"	l
sqlite_path	test_main/server.c	/^	char                    sqlite_path[128]="\/home\/iot25\/yangjiayu\/Get-message\/src\/..\/sqlite3\/Storage_temp.db";$/;"	l
sqlite_read	src/sqlite.c	/^int	sqlite_read(char *sqlite_path, char *output_file)$/;"	f
sqlite_read_1st	src/sqlite.c	/^int sqlite_read_1st(char *sqlite_path, int fd) $/;"	f
sqlite_write	src/sqlite.c	/^int	sqlite_write(char *sqlite_path, char *message)$/;"	f
start	test_main/client.c	/^		time_t 					start = 0;$/;"	l
stmt	src/sqlite.c	/^		sqlite3_stmt *stmt = NULL;$/;"	l
stmt	src/sqlite.c	/^		sqlite3_stmt *stmt;$/;"	l
stmt	src/sqlite.c	/^	sqlite3_stmt *stmt;$/;"	l
table_exists	src/sqlite.c	/^		int table_exists = 0;$/;"	l
table_name	test_main/client.c	/^		char*					table_name = "TempData";$/;"	l
temp	src/ds18b20.c	/^		float 		temp;                \/\/ 温度值$/;"	l
temp	test_main/client.c	/^		float					temp;$/;"	l
text	src/sqlite.c	/^				const unsigned char *text = sqlite3_column_text(stmt, 0);$/;"	l
time	src/ds18b20.c	/^		char 		time[52];             \/\/ 时间缓冲区$/;"	l
timeinfo	src/loca_time.c	/^		struct tm *timeinfo;$/;"	l
total_sent	src/send.c	/^		int total_sent = 0;			\/\/累计发送量$/;"	l
usage_message	src/usage.c	/^int usage_message(int argc, char **argv)$/;"	f
w1_path	src/ds18b20.c	/^	char    			w1_path[64] = "\/sys\/bus\/w1\/devices\/";$/;"	l
w_message	test_main/client.c	/^		char					*w_message = NULL;$/;"	l
